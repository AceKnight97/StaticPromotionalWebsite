[{"/Users/triettruong/Documents/test123/src/App.js":"1","/Users/triettruong/Documents/test123/src/Redux/Store/localStorage.js":"2","/Users/triettruong/Documents/test123/src/Redux/Sagas/index.js":"3","/Users/triettruong/Documents/test123/src/Redux/Reducers/initialState.js":"4","/Users/triettruong/Documents/test123/src/Helpers/auth.js":"5","/Users/triettruong/Documents/test123/src/Helpers/fetch-client.js":"6","/Users/triettruong/Documents/test123/src/Constants/newPatientData.js":"7","/Users/triettruong/Documents/test123/src/Pages/main.js":"8","/Users/triettruong/Documents/test123/src/Redux/Reducers/index.js":"9","/Users/triettruong/Documents/test123/src/Redux/Sagas/login.js":"10","/Users/triettruong/Documents/test123/src/Ultis/index.js":"11","/Users/triettruong/Documents/test123/src/Config/index.js":"12"},{"size":287,"mtime":1609410845356,"results":"13","hashOfConfig":"14"},{"size":456,"mtime":1609410845362,"results":"15","hashOfConfig":"14"},{"size":138,"mtime":1609410845361,"results":"16","hashOfConfig":"14"},{"size":65,"mtime":1609410845361,"results":"17","hashOfConfig":"14"},{"size":934,"mtime":1609410845359,"results":"18","hashOfConfig":"14"},{"size":466,"mtime":1609410845359,"results":"19","hashOfConfig":"14"},{"size":6715,"mtime":1609410845359,"results":"20","hashOfConfig":"14"},{"size":1103,"mtime":1609824593155,"results":"21","hashOfConfig":"14"},{"size":459,"mtime":1609410845361,"results":"22","hashOfConfig":"14"},{"size":2142,"mtime":1609410845362,"results":"23","hashOfConfig":"14"},{"size":196,"mtime":1609410845381,"results":"24","hashOfConfig":"14"},{"size":315,"mtime":1609410845358,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"mcepa",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/triettruong/Documents/test123/src/App.js",[],["54","55","56","57","58","59"],"/Users/triettruong/Documents/test123/src/Redux/Store/localStorage.js",[],"/Users/triettruong/Documents/test123/src/Redux/Sagas/index.js",[],"/Users/triettruong/Documents/test123/src/Redux/Reducers/initialState.js",[],"/Users/triettruong/Documents/test123/src/Helpers/auth.js",[],"/Users/triettruong/Documents/test123/src/Helpers/fetch-client.js",[],"/Users/triettruong/Documents/test123/src/Constants/newPatientData.js",[],"/Users/triettruong/Documents/test123/src/Pages/main.js",["60"],"/Users/triettruong/Documents/test123/src/Redux/Reducers/index.js",[],["61","62","63","64","65","66"],"/Users/triettruong/Documents/test123/src/Redux/Sagas/login.js",["67","68","69"],"import {\n  put, call, take, fork,\n} from 'redux-saga/effects';\nimport _ from 'lodash';\n\nimport { LOGIN_URL } from '../../Config';\nimport auth from '../../Helpers/auth';\nimport AppFlowActions from '../../Constants';\n\n// import login from '../reducers/login';\nimport fetchClient from '../../Helpers/fetch-client';\n\nfunction fetchUser(data) {\n  const { email, password } = data;\n  try {\n    const options = {\n      url: LOGIN_URL,\n      method: 'POST',\n      body: { email, password },\n    };\n\n    return fetchClient(options);\n  } catch (error) {\n    return null;\n  }\n}\n/**\n * Log in saga\n */\n\nexport function* loginRequest() {\n  const INFINITE = true;\n  while (INFINITE) {\n    const request = yield take(AppFlowActions.LOGIN_REQUEST);\n    // yield put({ type: AppFlowActions.LOADING_COMPLTE, isLoading: true });\n\n    const { data } = request;\n    const { email } = data;\n    const md = 'nhabanh@itrvn.com'; // MD\n    // other accounts will be nurse\n    const result = { isSuccess: true, user: { role: email === md ? 'MD' : 'NURSE', ...data } };\n    if (result?.isSuccess) auth.login(result);\n    yield put({ type: AppFlowActions.LOGIN_COMPLETE, data: result });\n\n    // const { email, password } = data;\n    // const nurse = 'nurse@itrvn.com';\n    // const md = 'md@itrvn.com';\n    // const tempPassword = 'Welcome1';\n    // let result = {};\n    // if ((email === nurse || email === md) && password === tempPassword) {\n    //   console.log(\"it's nurse\");\n    //   result = { isSuccess: true, user: { role: email === nurse ? 'NURSE' : 'MD' } };\n    // } else result = { isSuccess: false, message: 'Invalid' };\n    // if (result.isSuccess) auth.login(result);\n\n    // const result = yield call(fetchUser, { ...data });\n    // if (result && !_.isEmpty(result)) {\n    //   if (result.isSuccess) auth.login(result);\n    //   yield put({ type: AppFlowActions.LOGIN_COMPLETE, data: result });\n    //   if (result?.isSuccess) yield put({ type: AppFlowActions.GET_ALL_DATA_REQUEST });\n    //   // yield put({ type: AppFlowActions.LOADING_COMPLTE, isLoading: false });\n    // }\n  }\n}\n\nexport default function* loginFlow() {\n  yield fork(loginRequest);\n}\n","/Users/triettruong/Documents/test123/src/Ultis/index.js",["70","71","72","73"],"import _ from 'lodash';\nimport React from 'react';\n// import moment from 'moment';\n\nexport function convertLoginData(loginData = {}) {\n  return {};\n}\nexport function aasdasdas(loginData = {}) { }\n","/Users/triettruong/Documents/test123/src/Config/index.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":2,"column":8,"nodeType":"88","messageId":"89","endLine":2,"endColumn":17},{"ruleId":"74","replacedBy":"90"},{"ruleId":"76","replacedBy":"91"},{"ruleId":"78","replacedBy":"92"},{"ruleId":"80","replacedBy":"93"},{"ruleId":"82","replacedBy":"94"},{"ruleId":"84","replacedBy":"95"},{"ruleId":"86","severity":1,"message":"96","line":2,"column":8,"nodeType":"88","messageId":"89","endLine":2,"endColumn":12},{"ruleId":"86","severity":1,"message":"97","line":4,"column":8,"nodeType":"88","messageId":"89","endLine":4,"endColumn":9},{"ruleId":"86","severity":1,"message":"98","line":13,"column":10,"nodeType":"88","messageId":"89","endLine":13,"endColumn":19},{"ruleId":"86","severity":1,"message":"97","line":1,"column":8,"nodeType":"88","messageId":"89","endLine":1,"endColumn":9},{"ruleId":"86","severity":1,"message":"99","line":2,"column":8,"nodeType":"88","messageId":"89","endLine":2,"endColumn":13},{"ruleId":"86","severity":1,"message":"100","line":5,"column":34,"nodeType":"88","messageId":"89","endLine":5,"endColumn":43},{"ruleId":"86","severity":1,"message":"100","line":8,"column":27,"nodeType":"88","messageId":"89","endLine":8,"endColumn":36},"lines-around-directive",["101"],"no-spaced-func",["102"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar",["101"],["102"],[],[],[],[],"'call' is defined but never used.","'_' is defined but never used.","'fetchUser' is defined but never used.","'React' is defined but never used.","'loginData' is assigned a value but never used.","padding-line-between-statements","func-call-spacing"]